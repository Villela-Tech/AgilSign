{"ast":null,"code":"import{api}from'./api';export const authService={async login(email,password){try{const response=await api.post('/auth/login',{email,password});return response.data;}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Erro ao fazer login');}},async register(name,email,password){try{const response=await api.post('/auth/register',{name,email,password});return response.data;}catch(error){var _error$response2,_error$response2$data;throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Erro ao registrar usuário');}},getToken(){return localStorage.getItem('token');},setToken(token){localStorage.setItem('token',token);},removeToken(){localStorage.removeItem('token');},isAuthenticated(){return!!this.getToken();}};","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","error","_error$response","_error$response$data","Error","message","register","name","_error$response2","_error$response2$data","getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","isAuthenticated"],"sources":["C:/Users/tecnico25/Desktop/agilsign/src/services/auth.service.ts"],"sourcesContent":["import { api, API_URL } from './api';\r\n\r\nexport interface LoginResponse {\r\n  token: string;\r\n  user: {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    role: string;\r\n  };\r\n}\r\n\r\nexport const authService = {\r\n  async login(email: string, password: string): Promise<LoginResponse> {\r\n    try {\r\n      const response = await api.post<LoginResponse>('/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao fazer login');\r\n    }\r\n  },\r\n\r\n  async register(name: string, email: string, password: string): Promise<LoginResponse> {\r\n    try {\r\n      const response = await api.post<LoginResponse>('/auth/register', {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao registrar usuário');\r\n    }\r\n  },\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  },\r\n\r\n  setToken(token: string): void {\r\n    localStorage.setItem('token', token);\r\n  },\r\n\r\n  removeToken(): void {\r\n    localStorage.removeItem('token');\r\n  },\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  },\r\n}; "],"mappings":"AAAA,OAASA,GAAG,KAAiB,OAAO,CAYpC,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB,KAAM,CAAAC,KAAKA,CAACC,KAAa,CAAEC,QAAgB,CAA0B,CACnE,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAgB,aAAa,CAAE,CAC5DH,KAAK,CACLC,QACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAU,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACnB,KAAM,IAAI,CAAAC,KAAK,CAAC,EAAAF,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBE,OAAO,GAAI,qBAAqB,CAAC,CACzE,CACF,CAAC,CAED,KAAM,CAAAC,QAAQA,CAACC,IAAY,CAAEX,KAAa,CAAEC,QAAgB,CAA0B,CACpF,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAgB,gBAAgB,CAAE,CAC/DQ,IAAI,CACJX,KAAK,CACLC,QACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAU,CAAE,KAAAO,gBAAA,CAAAC,qBAAA,CACnB,KAAM,IAAI,CAAAL,KAAK,CAAC,EAAAI,gBAAA,CAAAP,KAAK,CAACH,QAAQ,UAAAU,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBR,IAAI,UAAAS,qBAAA,iBAApBA,qBAAA,CAAsBJ,OAAO,GAAI,2BAA2B,CAAC,CAC/E,CACF,CAAC,CAEDK,QAAQA,CAAA,CAAkB,CACxB,MAAO,CAAAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACtC,CAAC,CAEDC,QAAQA,CAACC,KAAa,CAAQ,CAC5BH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAED,KAAK,CAAC,CACtC,CAAC,CAEDE,WAAWA,CAAA,CAAS,CAClBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAEDC,eAAeA,CAAA,CAAY,CACzB,MAAO,CAAC,CAAC,IAAI,CAACR,QAAQ,CAAC,CAAC,CAC1B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}