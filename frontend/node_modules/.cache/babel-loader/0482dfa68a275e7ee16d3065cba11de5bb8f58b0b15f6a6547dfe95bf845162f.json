{"ast":null,"code":"import React from'react';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import Login from'./components/Login';import TermoCompromisso from'./components/TermoCompromisso';import TermoURL from'./components/TermoURL';import AssinarTermo from'./components/AssinarTermo';import VisualizarTermo from'./components/VisualizarTermo';import Dashboard from'./components/Dashboard';// Componente para proteger rotas que precisam de autenticação\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const isAuthenticated=localStorage.getItem('token')!==null;if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default function AppRoutes(){return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/termo/novo\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(TermoCompromisso,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/termo/:id/url\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(TermoURL,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/termo/:id\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(VisualizarTermo,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/assinar/:id\",element:/*#__PURE__*/_jsx(AssinarTermo,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true})})})]})});}","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Navigate","Login","TermoCompromisso","TermoURL","AssinarTermo","VisualizarTermo","Dashboard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ProtectedRoute","_ref","children","isAuthenticated","localStorage","getItem","to","replace","AppRoutes","path","element"],"sources":["C:/Users/tecnico25/Desktop/agilsign/src/routes.tsx"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport TermoCompromisso from './components/TermoCompromisso';\r\nimport TermoURL from './components/TermoURL';\r\nimport AssinarTermo from './components/AssinarTermo';\r\nimport VisualizarTermo from './components/VisualizarTermo';\r\nimport Dashboard from './components/Dashboard';\r\n\r\n// Componente para proteger rotas que precisam de autenticação\r\nconst ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\r\n  const isAuthenticated = localStorage.getItem('token') !== null;\r\n  \r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default function AppRoutes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        {/* Rota pública de login */}\r\n        <Route path=\"/\" element={<Login />} />\r\n\r\n        {/* Rotas protegidas (requerem autenticação) */}\r\n        <Route path=\"/dashboard\" element={\r\n          <ProtectedRoute>\r\n            <Dashboard />\r\n          </ProtectedRoute>\r\n        } />\r\n        \r\n        {/* Criar novo termo */}\r\n        <Route path=\"/termo/novo\" element={\r\n          <ProtectedRoute>\r\n            <TermoCompromisso />\r\n          </ProtectedRoute>\r\n        } />\r\n\r\n        {/* Visualizar URL gerada após criar termo */}\r\n        <Route path=\"/termo/:id/url\" element={\r\n          <ProtectedRoute>\r\n            <TermoURL />\r\n          </ProtectedRoute>\r\n        } />\r\n\r\n        {/* Visualizar detalhes do termo */}\r\n        <Route path=\"/termo/:id\" element={\r\n          <ProtectedRoute>\r\n            <VisualizarTermo />\r\n          </ProtectedRoute>\r\n        } />\r\n\r\n        {/* Rota pública para assinar termo */}\r\n        <Route path=\"/assinar/:id\" element={<AssinarTermo />} />\r\n\r\n        {/* Redirecionar rotas não encontradas para o dashboard */}\r\n        <Route path=\"*\" element={\r\n          <ProtectedRoute>\r\n            <Navigate to=\"/dashboard\" replace />\r\n          </ProtectedRoute>\r\n        } />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACjE,KAAM,CAAAE,eAAe,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAK,IAAI,CAE9D,GAAI,CAACF,eAAe,CAAE,CACpB,mBAAOR,IAAA,CAACR,QAAQ,EAACmB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,mBAAOZ,IAAA,CAAAE,SAAA,EAAAK,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,SAAS,CAAAM,SAASA,CAAA,CAAG,CAClC,mBACEb,IAAA,CAACX,aAAa,EAAAkB,QAAA,cACZH,KAAA,CAACd,MAAM,EAAAiB,QAAA,eAELP,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEf,IAAA,CAACP,KAAK,GAAE,CAAE,CAAE,CAAC,cAGtCO,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,YAAY,CAACC,OAAO,cAC9Bf,IAAA,CAACK,cAAc,EAAAE,QAAA,cACbP,IAAA,CAACF,SAAS,GAAE,CAAC,CACC,CACjB,CAAE,CAAC,cAGJE,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,aAAa,CAACC,OAAO,cAC/Bf,IAAA,CAACK,cAAc,EAAAE,QAAA,cACbP,IAAA,CAACN,gBAAgB,GAAE,CAAC,CACN,CACjB,CAAE,CAAC,cAGJM,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,gBAAgB,CAACC,OAAO,cAClCf,IAAA,CAACK,cAAc,EAAAE,QAAA,cACbP,IAAA,CAACL,QAAQ,GAAE,CAAC,CACE,CACjB,CAAE,CAAC,cAGJK,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,YAAY,CAACC,OAAO,cAC9Bf,IAAA,CAACK,cAAc,EAAAE,QAAA,cACbP,IAAA,CAACH,eAAe,GAAE,CAAC,CACL,CACjB,CAAE,CAAC,cAGJG,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,cAAc,CAACC,OAAO,cAAEf,IAAA,CAACJ,YAAY,GAAE,CAAE,CAAE,CAAC,cAGxDI,IAAA,CAACT,KAAK,EAACuB,IAAI,CAAC,GAAG,CAACC,OAAO,cACrBf,IAAA,CAACK,cAAc,EAAAE,QAAA,cACbP,IAAA,CAACR,QAAQ,EAACmB,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CACtB,CACjB,CAAE,CAAC,EACE,CAAC,CACI,CAAC,CAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}