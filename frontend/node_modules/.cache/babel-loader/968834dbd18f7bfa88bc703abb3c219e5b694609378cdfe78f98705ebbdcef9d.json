{"ast":null,"code":"import axios from 'axios';\nimport https from 'https';\nexport const API_URL = 'https://apiagilsign.villelatech.com.br';\n\n// URL base do frontend\nexport const FRONTEND_URL = 'https://ville5113.c44.integrator.host';\nconst config = {\n  baseURL: `${API_URL}/api`,\n  timeout: 30000,\n  // 30 segundos\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  httpsAgent: new https.Agent({\n    rejectUnauthorized: false // Permite certificados SSL auto-assinados\n  })\n};\nexport const api = axios.create(config);\n\n// Interceptor para adicionar o token de autenticação\napi.interceptors.request.use(config => {\n  try {\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n      console.log('Token adicionado ao cabeçalho:', token);\n    } else {\n      console.log('Token não encontrado no localStorage');\n    }\n    console.log('Configuração da requisição:', {\n      url: config.url,\n      method: config.method,\n      headers: config.headers,\n      data: config.data\n    });\n    return config;\n  } catch (error) {\n    console.error('Erro ao processar token:', error);\n    return config;\n  }\n}, error => {\n  console.error('Erro no interceptor de requisição:', error);\n  return Promise.reject(error);\n});\n\n// Interceptor para tratar erros de resposta\napi.interceptors.response.use(response => {\n  console.log('Resposta recebida:', {\n    status: response.status,\n    data: response.data,\n    headers: response.headers\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('Erro na resposta:', {\n    message: error.message,\n    response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n    config: error.config\n  });\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    console.log('Token inválido ou expirado, redirecionando para login');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\nexport const TermoService = {\n  // Criar novo termo\n  criar: async data => {\n    try {\n      console.log('Enviando dados para criar termo:', data);\n      console.log('URL da requisição:', `${API_URL}/api/termos`);\n      const response = await api.post('/termos', data);\n      console.log('Resposta completa do servidor:', {\n        status: response.status,\n        headers: response.headers,\n        data: response.data\n      });\n      if (!response.data) {\n        throw new Error('Resposta do servidor não contém dados');\n      }\n      if (!response.data.id) {\n        throw new Error('Resposta do servidor não contém ID');\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response6, _error$response7, _error$response7$data;\n      console.error('Erro detalhado ao criar termo:', {\n        message: error.message,\n        response: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n        status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status,\n        config: error.config\n      });\n      if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n        throw new Error('Endpoint não encontrado. Verifique a URL da API.');\n      }\n      if (error.code === 'ECONNREFUSED') {\n        throw new Error('Não foi possível conectar ao servidor. Verifique se o servidor está rodando.');\n      }\n      throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || error.message || 'Erro ao criar termo. Por favor, tente novamente.');\n    }\n  },\n  // Buscar termo por ID\n  buscarPorId: async id => {\n    const response = await api.get(`/termos/${id}`);\n    return response.data;\n  },\n  // Listar todos os termos\n  listar: async () => {\n    const response = await api.get('/termos');\n    return response.data;\n  },\n  // Atualizar status do termo\n  atualizarStatus: async (id, data) => {\n    const response = await api.patch(`/termos/${id}/status`, data);\n    return response.data;\n  },\n  // Excluir termo\n  excluir: async id => {\n    await api.delete(`/termos/${id}`);\n  },\n  // Gerar URL de acesso para assinatura\n  gerarUrlAcesso(id) {\n    return `${API_URL}/api/assinar/${id}`;\n  },\n  downloadPDF: async id => {\n    try {\n      const response = await api.get(`/termos/${id}/pdf`, {\n        responseType: 'arraybuffer'\n      });\n      return new Blob([response.data], {\n        type: 'application/pdf'\n      });\n    } catch (error) {\n      console.error('Erro ao baixar PDF:', error);\n      throw error;\n    }\n  },\n  gerarLinkAssinatura: id => {\n    return `${API_URL}/api/assinar/${id}`;\n  },\n  gerarLinkVisualizacao: id => {\n    return `${API_URL}/api/visualizar/${id}`;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","https","API_URL","FRONTEND_URL","config","baseURL","timeout","headers","httpsAgent","Agent","rejectUnauthorized","api","create","interceptors","request","use","token","localStorage","getItem","console","log","url","method","data","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","message","removeItem","window","location","href","TermoService","criar","post","Error","id","_error$response4","_error$response5","_error$response6","_error$response7","_error$response7$data","code","buscarPorId","get","listar","atualizarStatus","patch","excluir","delete","gerarUrlAcesso","downloadPDF","responseType","Blob","type","gerarLinkAssinatura","gerarLinkVisualizacao"],"sources":["C:/Users/tecnico25/Desktop/agilsign/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport https from 'https';\r\n\r\nexport const API_URL = 'https://apiagilsign.villelatech.com.br';\r\n\r\n// URL base do frontend\r\nexport const FRONTEND_URL = 'https://ville5113.c44.integrator.host';\r\n\r\nconst config = {\r\n  baseURL: `${API_URL}/api`,\r\n  timeout: 30000, // 30 segundos\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  },\r\n  httpsAgent: new https.Agent({\r\n    rejectUnauthorized: false // Permite certificados SSL auto-assinados\r\n  })\r\n};\r\n\r\nexport const api = axios.create(config);\r\n\r\n// Interceptor para adicionar o token de autenticação\r\napi.interceptors.request.use((config) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (token && config.headers) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n      console.log('Token adicionado ao cabeçalho:', token);\r\n    } else {\r\n      console.log('Token não encontrado no localStorage');\r\n    }\r\n    console.log('Configuração da requisição:', {\r\n      url: config.url,\r\n      method: config.method,\r\n      headers: config.headers,\r\n      data: config.data\r\n    });\r\n    return config;\r\n  } catch (error) {\r\n    console.error('Erro ao processar token:', error);\r\n    return config;\r\n  }\r\n}, (error) => {\r\n  console.error('Erro no interceptor de requisição:', error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Interceptor para tratar erros de resposta\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Resposta recebida:', {\r\n      status: response.status,\r\n      data: response.data,\r\n      headers: response.headers\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Erro na resposta:', {\r\n      message: error.message,\r\n      response: error.response?.data,\r\n      status: error.response?.status,\r\n      config: error.config\r\n    });\r\n    \r\n    if (error.response?.status === 401) {\r\n      console.log('Token inválido ou expirado, redirecionando para login');\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface TermoData {\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  equipe: string;\r\n  data: string;\r\n  urlAcesso?: string;\r\n  assinatura?: string;\r\n}\r\n\r\nexport interface TermoResponse {\r\n  id: string;\r\n  urlAcesso: string;\r\n}\r\n\r\nexport interface TermoDetalhes {\r\n  id: string;\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  status: 'pendente' | 'assinado';\r\n  dataCriacao: string;\r\n  urlAcesso: string;\r\n  assinatura?: string;\r\n}\r\n\r\nexport interface CriarTermoDTO {\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  status: 'pendente';\r\n}\r\n\r\nexport interface AtualizarStatusDTO {\r\n  status: 'assinado';\r\n  assinatura: string;\r\n}\r\n\r\nexport const TermoService = {\r\n  // Criar novo termo\r\n  criar: async (data: CriarTermoDTO): Promise<TermoDetalhes> => {\r\n    try {\r\n      console.log('Enviando dados para criar termo:', data);\r\n      console.log('URL da requisição:', `${API_URL}/api/termos`);\r\n      \r\n      const response = await api.post<TermoDetalhes>('/termos', data);\r\n      \r\n      console.log('Resposta completa do servidor:', {\r\n        status: response.status,\r\n        headers: response.headers,\r\n        data: response.data\r\n      });\r\n      \r\n      if (!response.data) {\r\n        throw new Error('Resposta do servidor não contém dados');\r\n      }\r\n\r\n      if (!response.data.id) {\r\n        throw new Error('Resposta do servidor não contém ID');\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Erro detalhado ao criar termo:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status,\r\n        config: error.config\r\n      });\r\n      \r\n      if (error.response?.status === 404) {\r\n        throw new Error('Endpoint não encontrado. Verifique a URL da API.');\r\n      }\r\n      \r\n      if (error.code === 'ECONNREFUSED') {\r\n        throw new Error('Não foi possível conectar ao servidor. Verifique se o servidor está rodando.');\r\n      }\r\n      \r\n      throw new Error(error.response?.data?.message || error.message || 'Erro ao criar termo. Por favor, tente novamente.');\r\n    }\r\n  },\r\n\r\n  // Buscar termo por ID\r\n  buscarPorId: async (id: string): Promise<TermoDetalhes> => {\r\n    const response = await api.get<TermoDetalhes>(`/termos/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Listar todos os termos\r\n  listar: async (): Promise<TermoDetalhes[]> => {\r\n    const response = await api.get<TermoDetalhes[]>('/termos');\r\n    return response.data;\r\n  },\r\n\r\n  // Atualizar status do termo\r\n  atualizarStatus: async (id: string, data: AtualizarStatusDTO): Promise<TermoDetalhes> => {\r\n    const response = await api.patch<TermoDetalhes>(`/termos/${id}/status`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Excluir termo\r\n  excluir: async (id: string): Promise<void> => {\r\n    await api.delete(`/termos/${id}`);\r\n  },\r\n\r\n  // Gerar URL de acesso para assinatura\r\n  gerarUrlAcesso(id: string): string {\r\n    return `${API_URL}/api/assinar/${id}`;\r\n  },\r\n\r\n  downloadPDF: async (id: string): Promise<Blob> => {\r\n    try {\r\n      const response = await api.get(`/termos/${id}/pdf`, {\r\n        responseType: 'arraybuffer'\r\n      });\r\n\r\n      return new Blob([response.data as ArrayBuffer], { type: 'application/pdf' });\r\n    } catch (error) {\r\n      console.error('Erro ao baixar PDF:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  gerarLinkAssinatura: (id: string): string => {\r\n    return `${API_URL}/api/assinar/${id}`;\r\n  },\r\n\r\n  gerarLinkVisualizacao: (id: string): string => {\r\n    return `${API_URL}/api/visualizar/${id}`;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}