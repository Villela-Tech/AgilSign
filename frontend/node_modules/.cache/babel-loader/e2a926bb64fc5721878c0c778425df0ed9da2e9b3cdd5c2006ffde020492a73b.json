{"ast":null,"code":"import { api } from './api';\nexport const authService = {\n  async login(email, password) {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao fazer login');\n    }\n  },\n  async register(name, email, password) {\n    try {\n      const response = await api.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erro ao registrar usuário');\n    }\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  setToken(token) {\n    localStorage.setItem('token', token);\n  },\n  removeToken() {\n    localStorage.removeItem('token');\n  },\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n};","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","error","_error$response","_error$response$data","Error","message","register","name","_error$response2","_error$response2$data","getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","isAuthenticated"],"sources":["C:/Users/tecnico25/Desktop/agilsign/frontend/src/services/auth.service.ts"],"sourcesContent":["import { api } from './api';\r\n\r\nexport interface LoginResponse {\r\n  token: string;\r\n  user: {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    role: string;\r\n  };\r\n}\r\n\r\nexport const authService = {\r\n  async login(email: string, password: string): Promise<LoginResponse> {\r\n    try {\r\n      const response = await api.post<LoginResponse>('/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao fazer login');\r\n    }\r\n  },\r\n\r\n  async register(name: string, email: string, password: string): Promise<LoginResponse> {\r\n    try {\r\n      const response = await api.post<LoginResponse>('/auth/register', {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.message || 'Erro ao registrar usuário');\r\n    }\r\n  },\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  },\r\n\r\n  setToken(token: string): void {\r\n    localStorage.setItem('token', token);\r\n  },\r\n\r\n  removeToken(): void {\r\n    localStorage.removeItem('token');\r\n  },\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  },\r\n}; "],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAY3B,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAA0B;IACnE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAgB,aAAa,EAAE;QAC5DH,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACnB,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,qBAAqB,CAAC;IACzE;EACF,CAAC;EAED,MAAMC,QAAQA,CAACC,IAAY,EAAEX,KAAa,EAAEC,QAAgB,EAA0B;IACpF,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAgB,gBAAgB,EAAE;QAC/DQ,IAAI;QACJX,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MACnB,MAAM,IAAIL,KAAK,CAAC,EAAAI,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,2BAA2B,CAAC;IAC/E;EACF,CAAC;EAEDK,QAAQA,CAAA,EAAkB;IACxB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;EAEDC,QAAQA,CAACC,KAAa,EAAQ;IAC5BH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACtC,CAAC;EAEDE,WAAWA,CAAA,EAAS;IAClBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAEDC,eAAeA,CAAA,EAAY;IACzB,OAAO,CAAC,CAAC,IAAI,CAACR,QAAQ,CAAC,CAAC;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}