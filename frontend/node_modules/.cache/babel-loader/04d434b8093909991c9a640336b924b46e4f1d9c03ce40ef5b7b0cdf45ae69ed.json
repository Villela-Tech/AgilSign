{"ast":null,"code":"import axios from'axios';const BASE_URL='http://8.242.76.158';const PORT=443;export const API_URL=`${BASE_URL}:${PORT}`;// URL base do frontend (mesma que a API neste caso)\nexport const FRONTEND_URL=API_URL;export const api=axios.create({baseURL:`${API_URL}/api`,timeout:30000,// 30 segundos\nheaders:{'Content-Type':'application/json','Accept':'application/json'}});// Interceptor para adicionar o token de autenticação\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');console.log('Token encontrado:',token);if(token&&config.headers){config.headers['Authorization']=`Bearer ${token}`;console.log('Headers após adicionar token:',config.headers);}return config;},error=>{console.error('Erro no interceptor:',error);return Promise.reject(error);});// Interceptor para tratar erros de resposta\napi.interceptors.response.use(response=>response,error=>{console.error('Erro na requisição:',error);if(error.code==='ECONNABORTED'){console.error('Timeout na requisição');}return Promise.reject(error);});export const TermoService={// Criar novo termo\ncriar:async data=>{const response=await api.post('/termos',data);return response.data;},// Buscar termo por ID\nbuscarPorId:async id=>{const response=await api.get(`/termos/${id}`);return response.data;},// Listar todos os termos\nlistar:async()=>{const response=await api.get('/termos');return response.data;},// Atualizar status do termo\natualizarStatus:async(id,data)=>{const response=await api.patch(`/termos/${id}/status`,data);return response.data;},// Excluir termo\nexcluir:async id=>{await api.delete(`/termos/${id}`);},// Gerar URL de acesso para assinatura\ngerarUrlAcesso(id){return`${API_URL}/assinar/${id}`;},downloadPDF:async id=>{try{const response=await api.get(`/termos/${id}/pdf`,{responseType:'arraybuffer'});return new Blob([response.data],{type:'application/pdf'});}catch(error){console.error('Erro ao baixar PDF:',error);throw error;}},gerarLinkAssinatura:id=>{return`${API_URL}/assinar/${id}`;},gerarLinkVisualizacao:id=>{return`${API_URL}/visualizar/${id}`;}};export default api;","map":{"version":3,"names":["axios","BASE_URL","PORT","API_URL","FRONTEND_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","error","Promise","reject","response","code","TermoService","criar","data","post","buscarPorId","id","get","listar","atualizarStatus","patch","excluir","delete","gerarUrlAcesso","downloadPDF","responseType","Blob","type","gerarLinkAssinatura","gerarLinkVisualizacao"],"sources":["C:/Users/tecnico25/Desktop/agilsign/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://8.242.76.158';\r\nconst PORT = 443;\r\nexport const API_URL = `${BASE_URL}:${PORT}`;\r\n\r\n// URL base do frontend (mesma que a API neste caso)\r\nexport const FRONTEND_URL = API_URL;\r\n\r\nexport const api = axios.create({\r\n  baseURL: `${API_URL}/api`,\r\n  timeout: 30000, // 30 segundos\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n});\r\n\r\n// Interceptor para adicionar o token de autenticação\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token encontrado:', token);\r\n  if (token && config.headers) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n    console.log('Headers após adicionar token:', config.headers);\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  console.error('Erro no interceptor:', error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Interceptor para tratar erros de resposta\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('Erro na requisição:', error);\r\n    if (error.code === 'ECONNABORTED') {\r\n      console.error('Timeout na requisição');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface TermoData {\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  equipe: string;\r\n  data: string;\r\n  urlAcesso?: string;\r\n  assinatura?: string;\r\n}\r\n\r\nexport interface TermoResponse {\r\n  id: string;\r\n  urlAcesso: string;\r\n}\r\n\r\nexport interface TermoDetalhes {\r\n  id: string;\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  status: 'pendente' | 'assinado';\r\n  dataCriacao: string;\r\n  urlAcesso: string;\r\n  assinatura?: string;\r\n}\r\n\r\nexport interface CriarTermoDTO {\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n}\r\n\r\nexport interface AtualizarStatusDTO {\r\n  status: 'assinado';\r\n  assinatura: string;\r\n}\r\n\r\nexport const TermoService = {\r\n  // Criar novo termo\r\n  criar: async (data: CriarTermoDTO): Promise<TermoDetalhes> => {\r\n    const response = await api.post<TermoDetalhes>('/termos', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Buscar termo por ID\r\n  buscarPorId: async (id: string): Promise<TermoDetalhes> => {\r\n    const response = await api.get<TermoDetalhes>(`/termos/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Listar todos os termos\r\n  listar: async (): Promise<TermoDetalhes[]> => {\r\n    const response = await api.get<TermoDetalhes[]>('/termos');\r\n    return response.data;\r\n  },\r\n\r\n  // Atualizar status do termo\r\n  atualizarStatus: async (id: string, data: AtualizarStatusDTO): Promise<TermoDetalhes> => {\r\n    const response = await api.patch<TermoDetalhes>(`/termos/${id}/status`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Excluir termo\r\n  excluir: async (id: string): Promise<void> => {\r\n    await api.delete(`/termos/${id}`);\r\n  },\r\n\r\n  // Gerar URL de acesso para assinatura\r\n  gerarUrlAcesso(id: string): string {\r\n    return `${API_URL}/assinar/${id}`;\r\n  },\r\n\r\n  downloadPDF: async (id: string): Promise<Blob> => {\r\n    try {\r\n      const response = await api.get(`/termos/${id}/pdf`, {\r\n        responseType: 'arraybuffer'\r\n      });\r\n\r\n      return new Blob([response.data as ArrayBuffer], { type: 'application/pdf' });\r\n    } catch (error) {\r\n      console.error('Erro ao baixar PDF:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  gerarLinkAssinatura: (id: string): string => {\r\n    return `${API_URL}/assinar/${id}`;\r\n  },\r\n\r\n  gerarLinkVisualizacao: (id: string): string => {\r\n    return `${API_URL}/visualizar/${id}`;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}