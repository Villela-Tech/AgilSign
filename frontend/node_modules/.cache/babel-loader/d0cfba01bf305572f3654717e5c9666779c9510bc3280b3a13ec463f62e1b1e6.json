{"ast":null,"code":"import axios from'axios';const BASE_URL='8.242.76.158';const PORT=443;export const API_URL=`${BASE_URL}:${PORT}`;// URL base do frontend (mesma que a API neste caso)\nexport const FRONTEND_URL=API_URL;export const api=axios.create({baseURL:`${API_URL}/api`,timeout:30000,// 30 segundos\nheaders:{'Content-Type':'application/json','Accept':'application/json'}});// Interceptor para adicionar o token de autenticação\napi.interceptors.request.use(config=>{try{const token=localStorage.getItem('token');if(token&&config.headers){config.headers['Authorization']=`Bearer ${token}`;}return config;}catch(error){console.error('Erro ao processar token:',error);return config;}},error=>{console.error('Erro no interceptor:',error);return Promise.reject(error);});// Interceptor para tratar erros de resposta\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token inválido ou expirado\nlocalStorage.removeItem('token');window.location.href='/';}return Promise.reject(error);});export const TermoService={// Criar novo termo\ncriar:async data=>{try{console.log('Enviando dados para criar termo:',data);const response=await api.post('/termos',data);console.log('Resposta completa do servidor:',response);console.log('Dados da resposta:',response.data);if(!response.data){console.error('Resposta sem dados');throw new Error('Resposta do servidor não contém dados');}if(!response.data.id){console.error('Resposta sem ID:',response.data);throw new Error('Resposta do servidor não contém ID');}return response.data;}catch(error){var _error$response2,_error$response3,_error$response4,_error$response4$data;console.error('Erro detalhado ao criar termo:',{error,response:error.response,data:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data,status:(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status});throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Erro ao criar termo. Por favor, tente novamente.');}},// Buscar termo por ID\nbuscarPorId:async id=>{const response=await api.get(`/termos/${id}`);return response.data;},// Listar todos os termos\nlistar:async()=>{const response=await api.get('/termos');return response.data;},// Atualizar status do termo\natualizarStatus:async(id,data)=>{const response=await api.patch(`/termos/${id}/status`,data);return response.data;},// Excluir termo\nexcluir:async id=>{await api.delete(`/termos/${id}`);},// Gerar URL de acesso para assinatura\ngerarUrlAcesso(id){return`${API_URL}/assinar/${id}`;},downloadPDF:async id=>{try{const response=await api.get(`/termos/${id}/pdf`,{responseType:'arraybuffer'});return new Blob([response.data],{type:'application/pdf'});}catch(error){console.error('Erro ao baixar PDF:',error);throw error;}},gerarLinkAssinatura:id=>{return`${API_URL}/assinar/${id}`;},gerarLinkVisualizacao:id=>{return`${API_URL}/visualizar/${id}`;}};export default api;","map":{"version":3,"names":["axios","BASE_URL","PORT","API_URL","FRONTEND_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","console","Promise","reject","response","_error$response","status","removeItem","window","location","href","TermoService","criar","data","log","post","Error","id","_error$response2","_error$response3","_error$response4","_error$response4$data","message","buscarPorId","get","listar","atualizarStatus","patch","excluir","delete","gerarUrlAcesso","downloadPDF","responseType","Blob","type","gerarLinkAssinatura","gerarLinkVisualizacao"],"sources":["C:/Users/tecnico25/Desktop/agilsign/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = '8.242.76.158';\r\nconst PORT = 443;\r\nexport const API_URL = `${BASE_URL}:${PORT}`;\r\n\r\n// URL base do frontend (mesma que a API neste caso)\r\nexport const FRONTEND_URL = API_URL;\r\n\r\nexport const api = axios.create({\r\n  baseURL: `${API_URL}/api`,\r\n  timeout: 30000, // 30 segundos\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n});\r\n\r\n// Interceptor para adicionar o token de autenticação\r\napi.interceptors.request.use((config) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (token && config.headers) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  } catch (error) {\r\n    console.error('Erro ao processar token:', error);\r\n    return config;\r\n  }\r\n}, (error) => {\r\n  console.error('Erro no interceptor:', error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Interceptor para tratar erros de resposta\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token inválido ou expirado\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface TermoData {\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  equipe: string;\r\n  data: string;\r\n  urlAcesso?: string;\r\n  assinatura?: string;\r\n}\r\n\r\nexport interface TermoResponse {\r\n  id: string;\r\n  urlAcesso: string;\r\n}\r\n\r\nexport interface TermoDetalhes {\r\n  id: string;\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  status: 'pendente' | 'assinado';\r\n  dataCriacao: string;\r\n  urlAcesso: string;\r\n  assinatura?: string;\r\n}\r\n\r\nexport interface CriarTermoDTO {\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  equipamento: string;\r\n  status: 'pendente';\r\n}\r\n\r\nexport interface AtualizarStatusDTO {\r\n  status: 'assinado';\r\n  assinatura: string;\r\n}\r\n\r\nexport const TermoService = {\r\n  // Criar novo termo\r\n  criar: async (data: CriarTermoDTO): Promise<TermoDetalhes> => {\r\n    try {\r\n      console.log('Enviando dados para criar termo:', data);\r\n      const response = await api.post<TermoDetalhes>('/termos', data);\r\n      console.log('Resposta completa do servidor:', response);\r\n      console.log('Dados da resposta:', response.data);\r\n      \r\n      if (!response.data) {\r\n        console.error('Resposta sem dados');\r\n        throw new Error('Resposta do servidor não contém dados');\r\n      }\r\n\r\n      if (!response.data.id) {\r\n        console.error('Resposta sem ID:', response.data);\r\n        throw new Error('Resposta do servidor não contém ID');\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Erro detalhado ao criar termo:', {\r\n        error,\r\n        response: error.response,\r\n        data: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      throw new Error(error.response?.data?.message || 'Erro ao criar termo. Por favor, tente novamente.');\r\n    }\r\n  },\r\n\r\n  // Buscar termo por ID\r\n  buscarPorId: async (id: string): Promise<TermoDetalhes> => {\r\n    const response = await api.get<TermoDetalhes>(`/termos/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Listar todos os termos\r\n  listar: async (): Promise<TermoDetalhes[]> => {\r\n    const response = await api.get<TermoDetalhes[]>('/termos');\r\n    return response.data;\r\n  },\r\n\r\n  // Atualizar status do termo\r\n  atualizarStatus: async (id: string, data: AtualizarStatusDTO): Promise<TermoDetalhes> => {\r\n    const response = await api.patch<TermoDetalhes>(`/termos/${id}/status`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Excluir termo\r\n  excluir: async (id: string): Promise<void> => {\r\n    await api.delete(`/termos/${id}`);\r\n  },\r\n\r\n  // Gerar URL de acesso para assinatura\r\n  gerarUrlAcesso(id: string): string {\r\n    return `${API_URL}/assinar/${id}`;\r\n  },\r\n\r\n  downloadPDF: async (id: string): Promise<Blob> => {\r\n    try {\r\n      const response = await api.get(`/termos/${id}/pdf`, {\r\n        responseType: 'arraybuffer'\r\n      });\r\n\r\n      return new Blob([response.data as ArrayBuffer], { type: 'application/pdf' });\r\n    } catch (error) {\r\n      console.error('Erro ao baixar PDF:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  gerarLinkAssinatura: (id: string): string => {\r\n    return `${API_URL}/assinar/${id}`;\r\n  },\r\n\r\n  gerarLinkVisualizacao: (id: string): string => {\r\n    return `${API_URL}/visualizar/${id}`;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}